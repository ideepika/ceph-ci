#!/bin/sh
# vim: set noet ts=8:
# postinst script for ceph-daemon
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#
# 	postinst configure <most-recently-configured-version>
# 	old-postinst abort-upgrade <new-version>
# 	conflictor's-postinst abort-remove in-favour <package> <new-version>
# 	postinst abort-remove
# 	deconfigured's-postinst abort-deconfigure in-favour <failed-install-package> <version> [<removing conflicting-package> <version>]
#

# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
       # create cephdaemon user
       # 1. create user if not existing
       if ! getent passwd | grep -q "^cephdaemon:"; then
         echo -n "Adding system user cephdaemon.."
         adduser --quiet \
                 --disabled-password \
                 cephdaemon 2>/dev/null || true
         echo "..done"
       fi
       # 3. adjust passwd entry
       echo -n "Setting system user cephdaemon properties.."
       usermod -c "ceph-daemon user for mgr/ssh" \
               cephdaemon
       # Unlock $SERVER_USER in case it is locked from an uninstall
       if [ -f /etc/shadow ]; then
           usermod -U -e '' cephdaemon
       else
           usermod -U cephdaemon
       fi
       echo "..done"

       test -d /home/cephdaemon/.ssh || mkdir /home/cephdaemon/.ssh
       chmod 0700 /home/cephdaemon/.ssh
       test -e /home/cephdaemon/.ssh/authorized_keys || touch /home/cephaemon/.ssh/authorized_keys
       chmod 0600 /home/cephdaemon/.ssh/authorized_keys

    ;;
    abort-upgrade|abort-remove|abort-deconfigure)
	:
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
